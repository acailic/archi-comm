# .github/workflows/ai-code-review.yml
# AI-powered code review workflow
# Analyzes code changes for bugs, security, and quality issues
# RELEVANT FILES: src/lib/api/ai.ts, .archicomm/review-config.json

name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ai-review:
    name: AI Code Review
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run AI code review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run review:branch ${{ github.head_ref }} -- --format markdown --output review-results.md

      - name: Comment review results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              if (!fs.existsSync('review-results.md')) {
                console.log('No review results found');
                return;
              }

              const reviewContent = fs.readFileSync('review-results.md', 'utf8');

              const comment = `
              ## ðŸ¤– AI Code Review

              ${reviewContent}

              ---
              *This review was automatically generated by AI. Please review the suggestions carefully.*
              `;

              // Find existing AI review comments
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const existingComment = comments.find(c =>
                c.user.type === 'Bot' && c.body.includes('ðŸ¤– AI Code Review')
              );

              if (existingComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: comment
                });
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not post AI review comment:', error);
            }
