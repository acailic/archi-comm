name: Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: |
            package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Enforce coverage thresholds
        if: always()
        shell: bash
        run: |
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "‚ùå Coverage summary not found"
            exit 1
          fi

          # Extract coverage percentages
          lines=$(jq -r '.total.lines.pct' coverage/coverage-summary.json)
          functions=$(jq -r '.total.functions.pct' coverage/coverage-summary.json)
          branches=$(jq -r '.total.branches.pct' coverage/coverage-summary.json)
          statements=$(jq -r '.total.statements.pct' coverage/coverage-summary.json)

          echo "üìä Coverage Results:"
          echo "  Lines:      ${lines}%"
          echo "  Functions:  ${functions}%"
          echo "  Branches:   ${branches}%"
          echo "  Statements: ${statements}%"
          echo ""

          # Check thresholds (80/80/75/80)
          THRESHOLD_LINES=80
          THRESHOLD_FUNCTIONS=80
          THRESHOLD_BRANCHES=75
          THRESHOLD_STATEMENTS=80

          failed=0

          if (( $(echo "$lines < $THRESHOLD_LINES" | bc -l) )); then
            echo "‚ùå Lines coverage ${lines}% is below threshold ${THRESHOLD_LINES}%"
            failed=1
          fi

          if (( $(echo "$functions < $THRESHOLD_FUNCTIONS" | bc -l) )); then
            echo "‚ùå Functions coverage ${functions}% is below threshold ${THRESHOLD_FUNCTIONS}%"
            failed=1
          fi

          if (( $(echo "$branches < $THRESHOLD_BRANCHES" | bc -l) )); then
            echo "‚ùå Branches coverage ${branches}% is below threshold ${THRESHOLD_BRANCHES}%"
            failed=1
          fi

          if (( $(echo "$statements < $THRESHOLD_STATEMENTS" | bc -l) )); then
            echo "‚ùå Statements coverage ${statements}% is below threshold ${THRESHOLD_STATEMENTS}%"
            failed=1
          fi

          if [ $failed -eq 1 ]; then
            echo ""
            echo "‚ùå Coverage thresholds not met"
            exit 1
          fi

          echo "‚úÖ All coverage thresholds met"

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage
          retention-days: 14

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          verbose: true

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: main,develop
          coverage-summary-path: ./coverage/coverage-summary.json
